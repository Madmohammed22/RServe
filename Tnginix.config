server {
    listen 8080;
    server_name example.com www.example.com;

    location / {
        root /home/mmad/resources;
        index index.html;
        Errors /home/mmad/resources
        index_error errorPage.html
    }
}

std::string parseRequest(std::string request)
{
    if (request.empty())
        return "";
    std::cout << "Received request: " << request << std::endl;
    std::string filePath = "/index.html";
    size_t startPos = request.find("GET /");
    if (startPos != std::string::npos)
    {
        startPos += 5;
        size_t endPos = request.find(" HTTP/", startPos);
        if (endPos != std::string::npos)
        {
            filePath = request.substr(startPos, endPos - startPos);
        }
    }
    return filePath;
}

std::string parsRequest_will(std::string request, std::string &method)
{
    if (request.empty())
        return "";
    size_t methodEnd = request.find(' ');
    if (methodEnd != std::string::npos)
    {
        method = request.substr(0, methodEnd);
    }
    else
    {
        method = "UNKNOWN";
    }

    std::string filePath = "/index.html";
    size_t startPos = request.find("GET /");
    if (startPos != std::string::npos)
    {
        startPos += 5;
        size_t endPos = request.find(" HTTP/", startPos);
        if (endPos != std::string::npos)
        {
            std::string requestedPath = request.substr(startPos, endPos - startPos);
            if (!requestedPath.empty() && requestedPath != "/")
            {
                filePath = requestedPath;
            }
        }
    }
    return filePath;
}
